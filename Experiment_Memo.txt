Date: 04-02-2018
Problem:
    1. Particle_weight is all 0.0 after several prediction;

Date: 04-03-2018
Problem: 
    1. After adjusting observationFCN, PF finally can work;
    2. The problem resides in particle propagation is not exactly matches real data changing trend;
    3. Solution is mapping particle propagation to observation space for calculating the weights;
    4. Reason is keeping particle ranges from [0, positive int], which corresponds to real data distribution;
    5. Next question is how to make [positive int] closer to 1 ?

Date: 04-23-2018
Experiments:
    1. Use random gradient ===> no good results
    2. Use averaged graident from last three time step ==> no salient change ==> data is too easy
    3. 

Problem remaining:
    1. It is hard to find unmatching predicting, since the gradient is too good;
    2. It is hard to corporate high dimensional data;
    3
    
Experiments:
    1. Use canoe data for prediction
    2. Do not normalize the data, since it would be low
    3. Each particle should do motion individually ===> with different noise

Conclusion:
    1. At first without normalization, the data changes in high variance
    2. It was hard to get tracking;
    3. After change the measurement_update variance, the prediction with gradient works again;
    4. Next step is to dynamic generate variance according to data;
    5. So, the mean and variance has to be generated by trainign frames;
    6. Then, if anomous events happens, the prediction would totally go off, particles would totally go off;
    7. After detect anomous, need to update particles to absorbe new observation;
    8. The potential issue would be the soe feature does not change enough;


Conclusion:
    1. Turns out, soe feature does not change enough indeed;
    2. When use the data_variance**2, the result again is pretty good;
    3. 


Date: 04-24-2018
Experiments: 
    1. Use grid data and try particle filter;
    2. Another reason would be, I am updating particles weights each time step;
    3. I could also try do pure prediction for several frames;
    
Conclusion:
    1. Pure prediction is also pretty good, haha
    2.

Date: 04-25-2018
Experiments:
    1. Draw error on secondary axis;
    2. Adjust particle init parameters;
    3. New file is at PF_grid.py

Observation:
    1. If init properly, particles can totally following the changing trend;
    2. Different grid, which has different soe respones, needs to init differently;
    3. In canoe video, upper grass area and water area needs to be init differently;
    4. Is it possible to init particles with some learning methods ?
    5. Once init well, only pure prediction is already very good;

Problem:
    1. Clearly, it is the way to prediction, has issue;
    2. Using gradient is tooooooo relevant to original data;
    3. Try to use another feature or change different way to pred;
    4. This is the stupiset mistake I have ever make; Do not make the same ever

